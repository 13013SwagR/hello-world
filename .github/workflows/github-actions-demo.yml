name: learn-github-actions
on: [push]
env:
  artifact_name: theGame-artifact
jobs:
##### build ####################################################################################################
  build_number:
    runs-on: ubuntu-latest
    outputs:
      build_number: ${{ steps.step1.outputs.BUILD_NUMBER }}
    steps:
      - name: Generate BUILD_NUMBER
        id: step1
        run: |
          echo "::set-output name=BUILD_NUMBER::$(echo ${GITHUB_SHA} | cut -c1-7)-$(date '+%Y%m%dT%H%M%S')"
  build-hello-world:
    runs-on: ubuntu-latest
    needs: build_number
    steps:
      - uses: actions/checkout@v2
      - name: Create artifact
        run: echo "It's all in the game" > thegame.txt 
      - name: Validate Artifact name
        run: echo $artifact_name-
      - name: Validate build number
        run: echo ${{ needs.build_number.outputs.build_number }}
      - name: Upload a Build Artifact
        if: ${{ !env.ACT }}
        uses: actions/upload-artifact@v2.3.0
        with:
          name: $artifact_name-${{ needs.build_number.outputs.build_number }}
          path: thegame.txt
##### release ##################################################################################################
  release-hello-world:
    permissions:
      contents: write
##### release ##################################################################################################
    needs: [build_number]
    runs-on: ubuntu-latest
    steps:
    # Pull all git tags/releases
    # Generate new semver compliant version
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Generate next version
      id: new_version
      uses: paulhatch/semantic-version@v4.0.2
      with:
        # The prefix to use to identify tags
        tag_prefix: ""
        major_pattern: |
          /^((build|ci|docs|feat|fix|perf|refactor|test)(\([a-z 0-9,.\-]+\))?!: [\w \(\),:.;\-#&']+|\nBREAKING CHANGES: [\w \(\),:.;\-#&']+)$/
        minor_pattern: |
          /^(feat)(\([a-z 0-9,.\-]+\))?!?: [\w \(\),:.;\-#&']+$/
        format: "${major}.${minor}.${patch}-prerelease.${increment}+${{ needs.build_number.outputs.build_number }}"
        short_tags: false
    - name: Create Github release
      uses: ncipollo/release-action@v1
      with:
      ## Upload artifacts as per ccs spec
        # artifacts: "release.tar.gz,foo/*.txt"
      ## Generate release notes as per conventional commits
        bodyFile: "body.md"
        token: ${{ secrets.GITHUB_TOKEN }}
      ## Action configuration
        allowUpdates: false
        artifactErrorsFailBuild: true
        commit: ${GITHUB_SHA} # current commit
        draft: false
        name: Release ${{ steps.new_version.outputs.version_tag }}+${{ needs.build_number.outputs.build_number }} # name of the release
        replacesArtifacts: true
        removeArtifacts: true
        tag: ${{ steps.new_version.outputs.version_tag }} # version_tag

 #### publish ############################################
 # Create Github release with assets/artifacts
 # Publishing of artifact could be done separatly 



# https://github.com/13013SwagR/hello-world/suites/4645262316/artifacts/126000027